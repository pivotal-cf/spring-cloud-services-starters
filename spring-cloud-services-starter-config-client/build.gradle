/*
 * Copyright 2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java-platform"
    id "maven-publish"
}

description = "Spring Cloud Services Config Client Starter"

javaPlatform {
    allowDependencies()
}

dependencies {
    api platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    api "org.springframework.cloud:spring-cloud-config-client"
    api "io.pivotal.spring.cloud:spring-cloud-services-cloudfoundry-connector:${springCloudServicesConnectorsVersion}"
    api "io.pivotal.spring.cloud:spring-cloud-services-spring-connector:${springCloudServicesConnectorsVersion}"
    api "io.pivotal.spring.cloud:cloudfoundry-certificate-truster:${cloudfoundryCertificateTrusterVersion}"

    runtime "org.springframework.security:spring-security-oauth2-client"
}

publishing {
    publications {
        myPlatform(MavenPublication) {
            from components.javaPlatform

//            pom {
//                withXml {
//                    def pomNode = asNode()
//                    def dependencyManagementNode = pomNode.get('dependencyManagement')
//                    if (dependencyManagementNode) pomNode.remove(dependencyManagementNode)
//                }
//            }
//
//            // Published pom will use fully-qualified dependency versions and no BOMs
//            versionMapping {
//                usage('java-api') {
//                    fromResolutionOf('classpath')
//                }
//                usage('java-runtime') {
//                    fromResolutionResult()
//                }
//            }
        }
    }
}
